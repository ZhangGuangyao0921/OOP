package concept;

import java.util.Date;

/*
 * 类(class)是构造对象的模板或者蓝图。我们可以将类想象成制作甜饼的切割机，将对象想象成小甜饼。
 * 由类构造对象的过程称为创建类的实例。
 * 封装(encapsulation)是和对象有关的一个重要的概念。
 * 从形式上看，封装不过是将数据和行为组合在一个包中，并对对象的使用隐藏了数据的实现方式。
 * 实现封装的关键是绝不能让类中的方法直接访问其他类的实例域。
 * 对象中的数据称为实例域，操纵数据的过程称为方法。
 * 对于每个特定的实例(对象)都有一组特定的实例域值，这些值的集合就是对象的当前状态
 * 想要使用对象，就必须先构造对象，并指定其初始状态，然后对对象使用方法。
 * 在Java中，使用构造器(constructor)构造新的实例。
 * 构造器是一种特殊的方法，用来构造必能初始化对象。
 * 构造器的名字应与类名相同。想要构造一个Date对象应该在构造器前面加上new操作符。
 * 
 * */

public class Concept {
	public static void main(String[] args) {
		//在标准Java库中包含一个Date类，即预定义类，Java中还有许多这样的类。
		//想要构造一个对象，应在构造器前面加new。
		Date s=new Date();
		System.out.print(s);//输出格式为当前的： 星期  月份  日期  时间(精确到秒)  时区   年份
	}

}
